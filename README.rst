#######################
Alpine-Gnuplot-EpsLaTeX
#######################

(Relatively) light-weight TeXLive container to compile sources generated by ``epslatex`` mode of `Gnuplot <http://www.gnuplot.info>`_.

************
Installation
************

Pull Docker image from DockerHub

.. code-block:: console

   $ docker pull naokihori/texlive:gnuplot-epslatex

or build by yourself using `Dockerfile <https://github.com/NaokiHori/Alpine-Dockerfiles/blob/gnuplot-epslatex/Dockerfile>`_ and `texlive.profile <https://github.com/NaokiHori/Alpine-Dockerfiles/blob/gnuplot-epslatex/texlive.profile>`_

.. code-block:: console

   $ docker build -t naokihori/texlive:gnuplot-epslatex .

*****
Usage
*****

#. Generate `tex` and `eps`

   .. code-block:: console

      $ gnuplot plot.gp

   where ``plot.gp`` is e.g.

   .. code-block:: text

      set terminal epslatex standalone color size 5.0,3.5 font ',17.28'
      set output 'result.tex'

      set xlabel '$x$'
      set ylabel '$y$'

      set xrange [0.0:2.*pi]
      set yrange [-1.1:1.1]

      set xtics ('$0$' 0., '$\pi$' pi, '$2 \pi$' 2.*pi)
      set ytics 0.5

      set style line 1 lc rgb '#FF0000' lw 5 dt 1
      set style line 2 lc rgb '#0000FF' lw 5 dt 2

      set key top right spacing 1.2

      plot \
        sin(x) t '$\sin \left( x \right)$' ls 1 w l, \
        cos(x) t '$\cos \left( x \right)$' ls 2 w l

   giving ``result.tex`` and ``result-inc.eps`` by default.

#. Convert ``eps`` to ``pdf``

   .. code-block:: console

      docker run \
        --rm \
        --volume ${PWD}:/project \
        --workdir /project \
        naokihori/texlive:gnuplot-epslatex \
        epstopdf result-inc.eps

   giving ``result-inc.pdf``.

#. Compile ``tex`` file

   .. code-block:: console

      docker run \
        --rm \
        --volume ${PWD}:/project \
        --workdir /project \
        naokihori/texlive:gnuplot-epslatex \
        pdflatex result.tex

   giving final ``result.pdf``.

This process is tested automatically by `GitHub Actions <https://github.com/NaokiHori/Alpine-Dockerfiles/blob/gnuplot-epslatex/.github/workflows/ci.yml>`_.
The final artifact can be found `here <https://github.com/NaokiHori/Alpine-Dockerfiles/blob/gnuplot-epslatex-artifacts/example/result.pdf>`_.

*********
Extension
*********

When you need additional packages, you need to modify `Dockerfile <https://github.com/NaokiHori/Alpine-Dockerfiles/blob/gnuplot-epslatex/Dockerfile>`_ and re-build the image by yourself.
For instance, when you need ``siunitx`` package, modify it as

.. code-block:: diff

   15c15
   < RUN ./tlmgr install extsizes epstopdf
   ---
   > RUN ./tlmgr install extsizes epstopdf siunitx

and re-build

.. code-block::

   $ docker build -t <your tag> .

